(()=>{"use strict";var n={426:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(537),o=e.n(t),i=e(645),a=e.n(i)()(o());a.push([n.id,"* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.main-container {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n    box-shadow: 0 0 15px;\r\n    padding-top: 12px;\r\n    margin-top: 25vh;\r\n    background-color: #fff;\r\n}\r\n\r\n.main-container div {\r\n    border-bottom: solid #d3d3d3 2px;\r\n    /* border-top: solid #d3d3d3 1px; */\r\n    \r\n}\r\n\r\n.heading {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.heading h2 {\r\n  opacity: 0.75;\r\n  font-size: 20px;\r\n  /* margin-top: 24px; */\r\n  margin-left: 12px;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.heading i {\r\n    margin-right: 12px;\r\n    opacity: 0.7;\r\n}\r\n\r\n.line {\r\n  color: #d3d3d3;\r\n  opacity: 0.75;\r\n}\r\n\r\n#input {\r\n  border: none;\r\n  margin-left: 12px;\r\n  font-style: italic;\r\n  padding: 12px;\r\n  width: 80%;\r\n}\r\n\r\n#input:focus{\r\n    outline: none;\r\n}\r\n\r\n.text-input {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.text-input i {\r\n    margin-right: 12px;\r\n}\r\n\r\n.hidden {\r\n    display: none;\r\n}\r\n\r\n.task-ui {\r\n    display: flex;    \r\n    padding-left: 12px;\r\n    align-items: center;\r\n}\r\n\r\n.icon {\r\n    margin-left: auto;\r\n    margin-right: 12px;\r\n    cursor: pointer;\r\n    padding: 6px;\r\n}\r\n\r\n.return {\r\n    padding: 6px;\r\n    cursor: pointer;\r\n}\r\n\r\n.reset {\r\n    padding: 4px;\r\n    cursor: pointer;\r\n}\r\n\r\n.highlight {\r\n    background-color: #fbfecd;\r\n}\r\n\r\n.para {\r\n    margin-left: 12px;\r\n    padding: 12px;\r\n}\r\n\r\n.para:focus{\r\n    outline: none;\r\n}\r\n\r\n.footer {\r\n    background-color: #f6f6f6;\r\n    padding: 12px;\r\n    width: 94%;   \r\n}\r\n\r\nfooter p{\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n    width: 40%;\r\n    margin: 0 auto;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,UAAU;IACV,cAAc;IACd,oBAAoB;IACpB,iBAAiB;IACjB,gBAAgB;IAChB,sBAAsB;AAC1B;;AAEA;IACI,gCAAgC;IAChC,mCAAmC;;AAEvC;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,sBAAsB;EACtB,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;IACI,kBAAkB;IAClB,YAAY;AAChB;;AAEA;EACE,cAAc;EACd,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,aAAa;EACb,UAAU;AACZ;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,aAAa;IACb,UAAU;AACd;;AAEA;IACI,eAAe;IACf,eAAe;IACf,UAAU;IACV,cAAc;AAClB",sourcesContent:["* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.main-container {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n    box-shadow: 0 0 15px;\r\n    padding-top: 12px;\r\n    margin-top: 25vh;\r\n    background-color: #fff;\r\n}\r\n\r\n.main-container div {\r\n    border-bottom: solid #d3d3d3 2px;\r\n    /* border-top: solid #d3d3d3 1px; */\r\n    \r\n}\r\n\r\n.heading {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.heading h2 {\r\n  opacity: 0.75;\r\n  font-size: 20px;\r\n  /* margin-top: 24px; */\r\n  margin-left: 12px;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.heading i {\r\n    margin-right: 12px;\r\n    opacity: 0.7;\r\n}\r\n\r\n.line {\r\n  color: #d3d3d3;\r\n  opacity: 0.75;\r\n}\r\n\r\n#input {\r\n  border: none;\r\n  margin-left: 12px;\r\n  font-style: italic;\r\n  padding: 12px;\r\n  width: 80%;\r\n}\r\n\r\n#input:focus{\r\n    outline: none;\r\n}\r\n\r\n.text-input {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.text-input i {\r\n    margin-right: 12px;\r\n}\r\n\r\n.hidden {\r\n    display: none;\r\n}\r\n\r\n.task-ui {\r\n    display: flex;    \r\n    padding-left: 12px;\r\n    align-items: center;\r\n}\r\n\r\n.icon {\r\n    margin-left: auto;\r\n    margin-right: 12px;\r\n    cursor: pointer;\r\n    padding: 6px;\r\n}\r\n\r\n.return {\r\n    padding: 6px;\r\n    cursor: pointer;\r\n}\r\n\r\n.reset {\r\n    padding: 4px;\r\n    cursor: pointer;\r\n}\r\n\r\n.highlight {\r\n    background-color: #fbfecd;\r\n}\r\n\r\n.para {\r\n    margin-left: 12px;\r\n    padding: 12px;\r\n}\r\n\r\n.para:focus{\r\n    outline: none;\r\n}\r\n\r\n.footer {\r\n    background-color: #f6f6f6;\r\n    padding: 12px;\r\n    width: 94%;   \r\n}\r\n\r\nfooter p{\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n    width: 40%;\r\n    margin: 0 auto;\r\n}"],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);t&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),r.push(d))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(a).concat([i]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var i={},a=[],A=0;A<n.length;A++){var c=n[A],s=t.base?c[0]+t.base:c[0],d=i[s]||0,p="".concat(s," ").concat(d);i[s]=d+1;var l=e(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)r[l].references++,r[l].updater(u);else{var f=o(u,t);t.byIndex=A,r.splice(A,0,{identifier:p,updater:f,references:1})}a.push(p)}return a}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=e(i[a]);r[A].references--}for(var c=t(n,o),s=0;s<i.length;s++){var d=e(i[s]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}i=c}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var i=r[t]={id:t,exports:{}};return n[t](i,i.exports,e),i.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n=e(379),r=e.n(n),t=e(795),o=e.n(t),i=e(569),a=e.n(i),A=e(565),c=e.n(A),s=e(216),d=e.n(s),p=e(589),l=e.n(p),u=e(426),f={};f.styleTagTransform=l(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),r()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;let g=JSON.parse(localStorage.getItem("tasks"))||[];function m(){const n=document.querySelectorAll(".task-ui"),r=document.querySelectorAll(".trash"),e=document.querySelectorAll(".ellipse"),t=document.querySelector(".tasks-section");for(let t=0;t<n.length;t+=1)n[t].addEventListener("click",(()=>{n[t].classList.toggle("highlight"),r[t].classList.toggle("hidden"),e[t].classList.toggle("hidden")}));r.forEach((n=>{n.addEventListener("click",(()=>{const r=n.parentNode,e=r.firstChild.nextSibling.textContent,o=g.filter((n=>n.description===e));for(let n=0;n<g.length;n+=1)if(g[n].index>o[0].index){const r=g[n].index-1;g[n].index=r}g=g.filter((n=>n.description!==e)),t.removeChild(r),localStorage.setItem("tasks",JSON.stringify(g))}))}))}function C(n){const r=document.querySelector(".tasks-section"),e=document.createElement("div");e.classList.add("task-ui");const t=document.createElement("input");t.setAttribute("type","checkbox");const o=document.createElement("p");o.setAttribute("contenteditable","true"),o.setAttribute("class","para"),o.textContent=n.description;const i=document.createElement("i");i.setAttribute("class","fa-solid fa-ellipsis-vertical"),i.classList.add("icon","ellipse");const a=document.createElement("i");return a.setAttribute("class","fa-solid fa-trash"),a.classList.add("hidden","icon","trash"),e.append(t,o,i,a),r.appendChild(e),r}function h(){document.querySelectorAll(".para").forEach((n=>{const r=n.textContent;n.addEventListener("keydown",(e=>{if("Enter"===e.key){e.preventDefault();const t=n.textContent;if(r===t)return!1;const o=g.filter((n=>n.description===r));g[o[0].index-1].description=t,localStorage.setItem("tasks",JSON.stringify(g))}return g}))}))}class x{constructor(n,r,e){this.description=n,this.completed=r,this.index=e}}function B(){const n=document.getElementById("input").value;if(""!==n){const r=new x(n,!1,g.length+1);g.push(r),g.forEach((n=>{n.index>=g.length&&(m(),C(n))})),m(),h(),document.getElementById("input").value="",localStorage.setItem("tasks",JSON.stringify(g))}}g.forEach((n=>{C(n)})),document.getElementById("input").addEventListener("keydown",(n=>{!function(n){"Enter"===n.key&&B()}(n)})),document.querySelector(".return").addEventListener("click",(()=>{B()})),m(),h()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,